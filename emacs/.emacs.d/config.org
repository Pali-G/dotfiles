* General Settings

#+BEGIN_SRC emacs-lisp
  (require 'use-package-ensure)
  (setq use-package-always-ensure t)
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (setq make-backup-files nil)
  (setq auto-save-default nil)
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (scroll-bar-mode -1)
  (tool-bar-mode -1)
  (tooltip-mode -1)
  (menu-bar-mode -1)
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (defalias 'yes-or-no-p 'y-or-n-p)
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (use-package which-key
    :config
    (which-key-mode))
#+END_SRC

* Looks

#+BEGIN_SRC emacs-lisp
  (use-package nyan-mode
    :config
    (nyan-mode))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (setq line-number-mode 1)
  (add-hook 'doc-view-mode-hook (lambda ()
                                  (setq line-number-mode -1)))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (fringe-mode '(0 . 0))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (use-package cyberpunk-theme
    :config
    (load-theme 'cyberpunk t))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (global-display-line-numbers-mode)
#+END_SRC

* Editing

#+BEGIN_SRC emacs-lisp
  (use-package ace-window

    :bind
    ("M-n" . ace-window))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (use-package expand-region
    :commands
    er/expand-region
    :bind
    ("C-v" . er/expand-region))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (setq show-paren-delay 0)
  (show-paren-mode 1)
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (electric-pair-mode 1)
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (use-package counsel
    :config
    (ivy-mode)
    :bind
    ("C-s" . swiper)
    ("M-x". counsel-M-x))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (use-package company
    :config
    (global-company-mode 1))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (use-package popup-kill-ring
    :bind
    ("M-y" . popup-kill-ring))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (use-package magit
    :commands
    magit-statue
    :bind
    ("M-g" . magit-status))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (use-package treemacs
    :config
    (global-set-key (kbd "M-0") 'treemacs-select-window)

    (add-hook 'treemacs-mode-hook (lambda ()
				    (display-line-numbers-mode -1))))
#+END_SRC

* Languages

** Org-Mode

#+BEGIN_SRC emacs-lisp
  (add-to-list 'org-structure-template-alist
		'("el" "#+BEGIN_SRC emacs-lisp\n?\n#+END_SRC"))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (setq org-catch-invisible-edits 'error)
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (add-hook 'org-mode-hook
	      (lambda ()
		(org-indent-mode 1)))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (setq org-agenda-files (quote
                          ("~/Dokumente/Orga/kalender.org")))
#+END_SRC

** Latex

#+BEGIN_SRC emacs-lisp
  (use-package tex
    :ensure auctex)
#+END_SRC
** R
#+BEGIN_SRC emacs-lisp
   (use-package ess
  :ensure ess)
#+END_SRC

#+BEGIN_SRC emacs-lisp
   (setq ess-use-auto-complete t)
#+END_SRC
